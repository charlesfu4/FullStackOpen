{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","del","name","number","onClick","PersonForm","pform","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumChange","type","Filter","filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","status","className","content","App","useState","persons","setPersons","setNewName","setNewNum","newFilter","setNewFilter","updateMessage","setUpdateMessage","useEffect","console","log","personService","allPersons","personToShow","toLowerCase","includes","event","target","preventDefault","repeatedPerson","find","undefined","window","confirm","changedPerson","newPerson","map","mesg","catch","error","concat","i","delperson","p","filteredPersons","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9a3ecb8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, del}) => {\n  return (\n  <li>{person.name} {person.number}\n   <button onClick={del}>Delete</button>\n  </li>\n  )\n}\n\nexport default Person ","import React from 'react'\n\nconst PersonForm = (pform) => {\n  return(\n  <form onSubmit={pform.addPerson}>\n    <div>\n      name: <input value={pform.newName} onChange={pform.handleNameChange} />\n    </div>\n    <div>\n      number: <input value={pform.newNumber} onChange={pform.handleNumChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n   </form>\n  )\n}\n\nexport default PersonForm ","import React from 'react'\n\nconst Filter = (filter) =>(\n  <div>\n    filter shown with <input onChange={filter.handleFilterChange} />\n  </div>\n) \n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n  \nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n  \nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n  \nexport default {getAll, create, update, del}","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === null) {\n      return null\n    }\n    else if(!message.status){\n      return (\n        <div className='error'>\n          {message.content}\n        </div>\n      )\n    }\n  \n    else{\n      return (\n        <div className='note'>\n          {message.content}\n        </div>\n      )\n    }\n  }\n\n  export default Notification","import React, { useState, useEffect} from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNum] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [updateMessage, setUpdateMessage] = useState({\n    content: '',\n    status: true,\n  })\n\n  useEffect(()=>{\n    console.log('effect')\n    personService\n    .getAll()\n    .then(allPersons => \n      setPersons(allPersons)\n    )\n  },[newName])\n\n  const personToShow = persons.filter(person => person.name\n    .toLowerCase()\n    .includes(newFilter.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const repeatedPerson = persons.find(person => person.name === newName)\n    if(repeatedPerson !== undefined){\n      console.log(`id ${repeatedPerson.id}`)\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)){\n        const changedPerson = {\n          ...repeatedPerson,\n          number: newNumber\n        }\n        personService\n        .update(repeatedPerson.id, changedPerson)\n        .then(newPerson => {\n          console.log(newPerson)\n          setPersons(persons.map(person => person.id !== repeatedPerson.id ?\n          person: newPerson))\n          console.log(persons)\n          const mesg = {\n            content: `Added ${newPerson.name}`,\n            status: true \n          } \n          setUpdateMessage(mesg)\n        })\n        .catch(error => {\n          const mesg = {\n            content: `Update function has not yet been implemented`,\n            status: false\n          } \n          setUpdateMessage(mesg)\n        })\n      }\n    }\n    else{\n      const personObj = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObj)\n        .then(newPerson =>{\n          setPersons(persons.concat(newPerson))\n          console.log(newPerson)\n          setUpdateMessage(`Added ${newPerson.name}`)\n      })\n    }\n    setNewName('')\n    setNewNum('')\n  }\n  \n  const deletePerson = (id) => {\n    const delperson = persons.find(p => p.id === id)\n    const filteredPersons = persons.filter(person => person.id !== id)\n    if (window.confirm(`Do you really want to delete ${delperson.name}?`)){\n      personService\n      .del(id)\n      .then(() => setPersons(filteredPersons))\n      .catch(error => {\n        const mesg = {\n          content: `Information of ${delperson.name} has been removed from the server.`,\n          status: false\n        } \n        setUpdateMessage(mesg)\n        setPersons(persons.filter(person => person.id !== delperson.id))\n      })\n    }\n  }\n  \n  const handleNameChange = (event) =>\n    setNewName(event.target.value)\n\n  const handleNumChange = (event) =>\n    setNewNum(event.target.value)\n\n  const handleFilterChange = (event) =>\n    setNewFilter(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={updateMessage} />\n      <Filter handleFilterChange={handleFilterChange}/>\n      <h2>Add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} \n      handleNameChange={handleNameChange} newNumber={newNumber}\n      handleNumChange={handleNumChange} />\n\n      <h2>Numbers</h2>\n      <div>\n        {personToShow.map((person, i) =>\n          <Person key={i} person={person} \n          del={() => deletePerson(person.id)} />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}